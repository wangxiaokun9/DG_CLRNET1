import matplotlib.pyplot as plt
import numpy as np

# 模拟损失函数数据   
epochs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
          11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
          21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
          41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
          51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
          61, 62, 63, 64, 65
        ]

base_CV_J = [47.87, 59.36, 66.89, 72.41, 68.42, 74.78, 74.00, 77.87, 75.57, 77.47, 
          83.24, 80.49, 77.61, 81.40, 80.10, 81.95, 81.94, 83.28, 82.9, 83.22,
          # 75.96-82.9
          83.23, 82.10, 80.99, 83.39, 84.32, 78.53, 82.41, 84.28, 83.98, 81.40, 
          81.86, 81.51, 78.46, 84.19, 85.61, 92.73, 93.20, 93.23, 93.33, 93.54,
          93.76, 93.29, 93.69, 93.95, 93.34, 93.58, 93.96, 93.55, 93.50, 93.76,
          92.87, 93.06, 92.87, 93.07, 92.43, 94.56, 94.65, 94.77, 94.76, 94.80,
          94.80, 94.77, 94.86, 94.75, 94.83
        ]


GCN_CV_J = [54.16, 63.36, 66.88, 60.06, 67.73, 76.59, 75.04, 75.45, 70.99, 76.58,
            79.00, 74.81, 81.38, 82.26, 80.57, 81.34, 81.55, 82.78, 82.25, 81.37,
            79.04, 83.29, 83.49, 82.66, 82.68, 82.98, 82.51, 81.39, 85.04, 82.85, 
            79.16, 83.05, 79.84, 80.17, 79.83, 92.73, 93.17, 93.40, 93.52, 93.36,
            93.92, 93.65, 93.81, 93.70, 93.58, 93.66, 93.83, 93.81, 94.11, 94.02, 
            93.48, 93.39, 93.46, 93.86, 93.26, 94.73, 94.88, 94.95, 94.98, 94.99,
            94.93, 95.05, 94.90, 94.91, 95.02
            # 94.99, 94.98, 95.04, 95.05, 94.96,
            # 94.96, 95.08, 95.02, 95.06, 94.92, 95.07, 95.07, 95.07, 94.96, 95.13,
            # 95.08, 94.81, 95.07, 95.09, 95.06, 95.02, 95.08, 95.09, 95.00, 95.07,
            # 95.06, 95.01, 95.01, 95.06, 95.03, 94.92, 95.01, 95.07, 95.07, 95.14
        ]



SRAM_GCN_CV_J= [50.63, 63.34, 67.47, 72.26, 71.17, 73, 77.97, 77.27, 77.27, 79.04,    # 68.44-73 65.94-77.27  67.09-77.27
                81.3, 81.02, 79.64, 80.5, 80.3, 79.8, 80.5, 82.96 , 84.2, 81.24,  # 78.06-81.3 77.72-81.02 74.15-80.5 77.70-79.8  72.7-80.5
                81.5, 82.82, 83.29, 83.76, 83.27, 84.35, 83.37, 85.06, 85.04, 84.43, 
                # 80.36-81.5  
                83.28, 83.79, 82.8, 84.99, 85.23, 92.86, 93.34 , 93.42, 93.82, 93.69,
                #80.23-85.23 86.79-  85.8 
                93.7, 93.81, 93.78, 93.8, 93.73, 93.90, 93.91, 93.81, 93.78, 94.02,
                93.33, 93.72 , 93.27, 93.65, 93.29, 94.64, 94.78, 94.88, 94.92,95.06,
                95.11, 95.19,  95.22, 95.2, 95.27, 
                # 95.16, 95.01, 95.18, 95.11, 95.19, 95.11, 95.19, 95.21, 95.16, 95.17,
                # 95.17, 95.21, 95.19, 95.22, 95.18, 95.06, 95.13, 95.15, 95.19, 95.09
]


# 绘制损失函数曲线
plt.figure(figsize=(10, 6))

plt.plot(epochs, base_CV_J, label='bass_acc', color='#1f77b4', linewidth=0.5, )
plt.plot(epochs, GCN_CV_J, label='+MST-GC_acc', color='#ff7f0e',linewidth=0.5,linestyle='--')    #  linestyle='--', 
plt.plot(epochs, SRAM_GCN_CV_J, label='+MST-GC+SPAM_acc', color='#ff3333', linewidth=0.5, )
# plt.plot(epochs, CV_base_1 , label='bass_1_acc', color='blue', linewidth=0.5, )
# plt.plot(epochs, CV_base_2 , label='bass_2_acc', color='yellow', linewidth=0.5, )


plt.title('TOP1 ACC Curve')

plt.xlabel('Epochs')
plt.ylabel('TOP1-Acc')
plt.legend()

plt.savefig('PNG/0612_3_CVGCN_Acc.png')
print("图像已保存为 acc_curve.png")